class Node:
    def __init__(self, data=None, next=None):
        self.data = data
        self.next = next

class Stack:
    def __init__(self):
        self.head = None
        self.Top = None

    def push(self, val):
        node = Node(val)
        if self.head is None:
            self.head = node
            self.Top = node
        else:
            self.Top.next = node
            self.Top = node

    def display(self):
        if self.head is None:
            print("No elements")
            return
        itr = self.head
        while itr:
            print(itr.data, end='->')
            itr = itr.next
        print()

    def peek(self):
        if self.Top:
            print("Peek element:", self.Top.data)
            return self.Top.data
        print("No elements in stack!")
        return None

    def pop(self):
        if self.head is None:
            print("Stack is empty!")
            return None

        if self.head == self.Top:
            val = self.Top.data
            self.head = None
            self.Top = None
            print("Popped:", val)
            return val

        itr = self.head
        while itr.next != self.Top:
            itr = itr.next

        val = self.Top.data
        itr.next = None
        self.Top = itr
        print("Popped:", val)
        return val
